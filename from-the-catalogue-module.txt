#!/usr/bin/perl -CSDA

# EMu users call this script from a Report (report type Te Papa Contact Sheet)
# The script outputs 4x image cards per row as an html page
# The script utilises the w3 css styling  (e.g. you need to have an internet access for the html page to display correctly)
# XML part of script by Axiell, remainder by Gareth Watkins - Te Papa, 28 June 2021

# Script last modified by Gareth Watkins, 5 May 2022

use strict;
use XML::Simple;
use IO::File;
use HTML::Entities;

my $File;       # File handle
my $OutFile;    # CSV File handle
my $outFileName = "TePapaContactSheet.html";

my $tmpfile = `texenv -v | grep tmppath`;
my $s = "";


if (@ARGV == 0)
{
        $File = \*STDIN;
}
else
{
	# Special bit of processing. There are/were some 
	# control characters that need to be removed.
	# If not removed the XMLin method bombs out.

	$tmpfile =~ s/\n//g;
	($s,$tmpfile) = split("=",$tmpfile);
	$tmpfile .= "\/" . `echo $$`;
	$tmpfile =~ s/\n//g;
	`cp $ARGV[0] $tmpfile`;
	open(IN,"< $tmpfile") || die "Read of XML file not permitted";
	open(OUT,"> $ARGV[0]") || die "Write of XML file not permitted";
	while (<IN>)
	{
		$_ =~ s/\ca/ /g;
		$_ =~ s/\cb/ /g;
		$_ =~ s/\cc/ /g;
		$_ =~ s/\cd/ /g;
		$_ =~ s/\ce/ /g;
		$_ =~ s/\cf/ /g;
		$_ =~ s/\cg/ /g;
		$_ =~ s/\ch/ /g;
		$_ =~ s/\ci/ /g;
		$_ =~ s/\cj/ /g;
		$_ =~ s/\ck/ /g;
		$_ =~ s/\cl/ /g;
		$_ =~ s/\cm/ /g;
		$_ =~ s/\cn/ /g;
		$_ =~ s/\co/ /g;
		$_ =~ s/\cp/ /g;
		$_ =~ s/\cq/ /g;
		$_ =~ s/\cr/ /g;
		$_ =~ s/\cs/ /g;
		$_ =~ s/\ct/ /g;
		$_ =~ s/\cu/ /g;
		$_ =~ s/\cv/ /g;
		$_ =~ s/\cw/ /g;
		$_ =~ s/\cx/ /g;
		$_ =~ s/\cy/ /g;
		$_ =~ s/\cz/ /g;
#print XMLCONTENT "$_";
		print OUT "$_";
		
	}
	close(IN);
	close(OUT);
	`rm $tmpfile`;

        $File = IO::File->new();
	$File->open($ARGV[0], "<") || die "Error: Cannot open file $ARGV[0] for reading: $!\n";
}
$OutFile = IO::File->new();
$OutFile->open("$outFileName", '>') || die "Error: Cannot open file for writing: $!\n";

my $ecat = XMLin($File,ForceArray=>1);

my $flag = 1;
my $arg = "";
my $val = "";


my $irn = "";
my $regNumber = "";
my $title = "";
my $summaryData="";
my $output="";
my $mmPath="";
my $mmFileName="";
my $newFileName="";
my $colCount=1;
my $imgCount=0;
my $rowCount=1;

$output.='
<!DOCTYPE html>
<html>
<head>
<title> </title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
<style type="text/css">
@media screen {
	body { background: #F5F5F5; }
	}

@media print {
	.w3-quarter { width:25%; height:auto; font-size:smaller; }
	.pagebreak { page-break-before: always; }
	}
</style>
</head>
<body>
<div class="w3-container">
';

my $publishOnline="";
my $displayRegNumber="";
my $regNumber="";
my $title="";
my $qualifiedName = "";
my $encTitle="";
my $encQualifiedName="";
my $encRegNumber="";
my $summaryDataTextLimit=200; 

foreach $arg (@{$ecat->{tuple}}) 
{
	$irn = "$arg->{atom}->{irn}->{content}";
	if ($irn eq "") { next; }
	
	$regNumber = "$arg->{atom}->{RegRegistrationNumberString}->{content}";
	
	$title = "$arg->{atom}->{ClaMainTitle}->{content}";
	$qualifiedName = "$arg->{table}->{IdeQualifiedName_tab}->{tuple}->[0]->{atom}->{IdeQualifiedName}->{content}";
	$publishOnline = "$arg->{atom}->{AdmPublishWebNoPassword}->{content}";
	$summaryData = "$arg->{atom}->{SummaryData}->{content}";

	$encTitle = encode_entities($title);
	$encQualifiedName=encode_entities($qualifiedName);	
	$encRegNumber=encode_entities($regNumber);

	$displayRegNumber = $encRegNumber;

	if (length($summaryData) > $summaryDataTextLimit) {
		$summaryData = substr($summaryData,0,$summaryDataTextLimit) . '...';
		}

	if ($publishOnline eq "Yes") { 
		$displayRegNumber = '<a href="https://collections.tepapa.govt.nz/object/' . $irn . '" target="_blank" title="Collections Online">' . $encRegNumber . '</a>'; 
		$summaryData =~ s/$regNumber/$displayRegNumber/ig;
		} 

foreach $val (@{$arg->{table}->{MulMultiMediaRef_tab}->{tuple}}) {
	$mmPath = "$val->{atom}->{Multimedia}->{content}";
	
	if ($mmPath) {

	$mmPath =~ s/^\s+|\s+$//g;
	my @parts = split(/\\/,$mmPath);
	my $filename = pop(@parts);
	my @filenameParts = split(/\./,$filename);
	my $suffix = pop(@filenameParts);

	if (($suffix ne "jpg") && ($suffix ne "jpeg")) { next; }

	my $style ='width:100%';
	my $width=int($val->{atom}->{ChaImageWidth}->{content});
	my $height=int($val->{atom}->{ChaImageHeight}->{content});

	# If this is a portrait image restrict the height if it is too long	
	if ($height > $width) {
		$style = 'max-height:640px; max-width:100%; margin-left:auto; margin-right:auto; display:block'; 
		}

	$imgCount++;

	if ($colCount == 1) {
		$output.='<div class="w3-row-padding w3-margin-top">';
		}
	
	$output.='<div class="w3-quarter"><div class="w3-card" style="margin-bottom:10px"><img src="' . $mmPath . '" style="' . $style . '">' . chr(10);
	$output.='<div class="w3-container"><p style="font-size:smaller">' . $summaryData . '</p></div></div></div>' . chr(10);

	$colCount++;

	if ($colCount > 4) {
		$output.= '</div>';
		$colCount=1;
		$rowCount++;
		}
	
	if ($rowCount > 3) { 
		$output.='<div class="pagebreak">&nbsp;</div>'; 
		$rowCount=1;
		}

	} #end mmPath

	} #end Multimedia value



} #end xml processing loop

if (($colCount <= 4) && ($imgCount > 0)) { $output.="</div>"; }

if ($imgCount ==0) { $output.="<p>Sorry, no jpg/jpeg images to display</p>"; }

$output.="<p>&nbsp;</p></div></body></html>";

#Output the finished file
print $OutFile $output;

print("$outFileName\n");
$OutFile->close();
exit(0);
